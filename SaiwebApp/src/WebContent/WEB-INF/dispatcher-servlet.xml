<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mvc="http://www.springframework.org/schema/mvc"
xmlns:context="http://www.springframework.org/schema/context"
xsi:schemaLocation="
http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<import resource="classpath*:common-context.xml" />
	<context:component-scan base-package="org.saiweb.mandirs.controller" />
	<context:annotation-config />
	<mvc:annotation-driven />
	<context:property-placeholder location="classpath:config.properties" />
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- Register the Customer.properties -->
	<bean id="messageSource"
	class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename" value="Messages" />
	</bean>
	<bean id="transactionManager"
	class="org.springframework.orm.hibernate3.HibernateTransactionManager"
	p:sessionFactory-ref="sessionFactory" />

	<!-- Declare a view resolver -->
	<bean id="viewResolver"
	class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
		value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>
	<bean id="mandirDAO" class="org.saiweb.mandirs.dao.impl.MandirDAOImpl">
		<property name="sessionFactory" ref="sessionFactory" />

	</bean>
	<bean id="statusDAO" class="org.saiweb.mandirs.dao.impl.StatusDAOImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<bean id="contactDAO" class="org.saiweb.mandirs.dao.impl.ContactDAOImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<bean id="addressDAO" class="org.saiweb.mandirs.dao.impl.AddressDAOImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
		<bean id="regionDAO" class="org.saiweb.mandirs.dao.impl.RegionDAOImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<bean id="countryDAO" class="org.saiweb.mandirs.dao.impl.CountryDAOImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<bean id="stateDAO" class="org.saiweb.mandirs.dao.impl.StateDAOImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<bean id="sessionFactory"
	class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="hibernateProperties" ref="hibernateProperties" />
		<property name="dataSource" ref="dataSource" />
		<property name="annotatedClasses">
			<list>
				<value>org.saiweb.mandirs.model.Mandir</value>
				<value>org.saiweb.mandirs.model.Address</value>
				<value>org.saiweb.mandirs.model.Contact</value>
				<value>org.saiweb.mandirs.model.MandirDataFlow</value>
				<value>org.saiweb.mandirs.model.Status</value>
				<value>org.saiweb.mandirs.model.MandirTeamContact</value>
				<value>org.saiweb.mandirs.model.Country</value>
				<value>org.saiweb.mandirs.model.State</value>
         		<value>org.saiweb.mandirs.model.Region</value>
			</list>
		</property>
		<property name="mappingResources" ref="orMappings" />

		<!-- property name="hibernateProperties">
		<props>
		<prop key="hibernate.dialect">"${hibernate.dialect}"</prop>
		<prop key="hibernate.max_fetch_depth">3</prop>
		<prop key="hibernate.show_sql">true</prop>
		</props>
		</property-->
		<property name="packagesToScan" value="org.saiweb"></property>
	</bean>
	<bean id="hibernateProperties"
	class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="properties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.query.substitutions">true 1, false 0</prop>
				<prop key="hibernate.connection.release_mode">after_transaction</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
				<!--				<prop key="hibernate.cache.provider_class">org.hibernate.cache.SingletonEhCacheProvider</prop>-->
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<prop key="hibernate.jdbc.batch_size">0</prop>
				<!-- MINH -->
				<prop key="hibernate.current_session_context_class">thread</prop>
				<!-- <prop key="hibernate.current_session_context_class">org.hibernate.context.ManagedSessionContext</prop>
				-->
			</props>
		</property>
	</bean>
	<bean id="dataSource"
	class="org.springframework.jdbc.datasource.DriverManagerDataSource"
	p:driverClassName="${jdbc.driverClassName}" p:url="${jdbc.url}"
	p:username="${jdbc.username}" p:password="${jdbc.password}" />

</beans>